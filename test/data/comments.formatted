% module attribute comment
-module(comments).

% export attribute comment
-export([fact/1]).

% some attribute comment
-some(thing).

-format(#{inline_clause_bodies => true}).

% Regular comment
-export([ dummy_fn/1
        , % Plz keep me! << this comment will be misplaced
          multiline/0
        ]).

-record( small
       , { % The first field
           f1
         , % The second field
           f2
         }
       ).
-record( large
       , { % The first field
           large_field_1
         , % The second field
           large_field_2
         , % The third field
           large_field_3
         , large_field_4
         , % The previous one didn't have a comment but this one has a very long one (really really long)
           large_field_5
         }
       ).

%% @doc This will all be part of the first paragraph.
%% It can stretch over several lines and contain <em>any XHTML markup</em>.
%%
%% This is the second paragraph. The above line is
%% regarded as "empty" by EDoc, even though it ends with a space.
% beginning of function declaration

fact(N) when N > 0 ->
  %  |
  N * fact(N - 1);
%  |
fact(0) ->
  % end of function declaration
  1.

%% @doc This is a oneline @doc comment
dummy_fn(A) ->
  Fn = fun (B) -> B end,
  % Inline comment
  % Newline comment
  Fn(A).

% This is
% a multiline
% comment

multiline() ->
  X = "
This is
a multiline
string
",
  {ok, X}.
